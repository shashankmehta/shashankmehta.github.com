---
description: This file covers the overall architecture of the project
globs: 
alwaysApply: false
---
# Jekyll to Eleventy Migration Architecture

This document outlines the architecture of the blog after migrating from Jekyll to Eleventy.

## Overall Structure

The site maintains the same URL structure and visual appearance as the original Jekyll site while modernizing the build system with Eleventy. The migration strategy focused on preserving content and design while updating the underlying technology.

## Directory Structure

- **Root** - Contains main pages and configuration files
  - `index.html` - Homepage
  - `blog/index.html` - Blog listing page
  - `eleventy.config.js` - Eleventy configuration
  - `package.json` - NPM package configuration
  
- **_posts/** - Contains all blog posts as Markdown files with frontmatter
  - Format: `YYYY-MM-DD-title.md`
  
- **_layouts/** - Template layouts for different page types
  - `layout.html` - Base layout for most pages
  - `blog.html` - Layout for blog listing
  - `post.html` - Layout for individual blog posts
  - `slickjs.html` - Special layout for slick.js showcase
  
- **_includes/** - Reusable components
  - `head.liquid` - HTML head with metadata, styles, and scripts
  - `navigation.liquid` - Site navigation component
  - `footer.liquid` - Site footer with analytics scripts
  
- **css/** - Stylesheets
  - `base.css` - Main stylesheet
  - `pure.css` - Pure CSS framework
  - `pygments.css` - Code highlighting styles
  
- **_site/** - Generated static site (output)

## Template Engine

The site uses Liquid as the primary templating language, maintaining compatibility with the original Jekyll templates while leveraging Eleventy's flexibility.

## Data Structure

- `site` - Global site data (equivalent to Jekyll's _config.yml)
  - `name` - Site name
  - `description` - Site description
  - `twitter` - Twitter handle
  - `url` - Site URL
  - `github` - GitHub username
  - etc.

## Collections

- `collections.posts` - All blog posts, sorted by date (newest first)
  - Generated from files in the `_posts/` directory

## URL Structure

- `/` - Homepage
- `/blog` - Blog listing
- `/archive/:year/:title.html` - Individual blog posts (maintaining Jekyll URL format)
- `/setup`, `/about`, etc. - Other static pages

## Components

### Navigation (`navigation.liquid`)
The site navigation is implemented as a reusable component, providing consistent navigation across all pages.

### Head (`head.liquid`)
Contains common meta tags, stylesheets, Open Graph data, and other elements needed in the HTML `<head>` section.

### Footer (`footer.liquid`)
Contains analytics scripts and other footer elements that should be included on all pages.

## Build Process

1. Eleventy processes all templates and Markdown files
2. Assets like CSS, JavaScript, and images are copied to the output directory
3. Blog posts are organized into the `/archive/:year/:title.html` structure
4. The site is generated in the `_site/` directory

## Key Configuration

The `eleventy.config.js` file is the central configuration that:

1. Sets up collections for blog posts
2. Configures permalinks to match the original Jekyll URL structure
3. Adds syntax highlighting for code blocks
4. Defines filters for date formatting
5. Provides global site data
6. Configures Markdown parsing options

## Migration Differences

1. **Data References**: Jekyll's `site.variable` references are maintained in Eleventy using the same structure
2. **Template Extensions**: Files use `.liquid` extension for clearer identification of template type
3. **Component Structure**: The site was reorganized to use a more component-based approach, with navigation, head, and footer as separate components

## Generated Output

The static site output in the `_site/` directory maintains the same structure and URLs as the original Jekyll site, ensuring a seamless transition for users and preserving SEO benefits. 